twitter-to-kafka-service:
  twitter-keywords:
    - Java
    - Microservices
    - Kafka
    - Elasticsearch
  welcome-message: Welcome from the yaml file
  enable-mock-tweets: true
  mock-min-tweet-length: 5
  mock-max-tweet-length: 15
  mock-sleep-ms: 10000

retry-config:
  initial-interval-ms: 1000
  max-interval-ms: 10000
  multiplier: 2.0
  max-attempts: 3
  sleep-time-ms: 2000

kafka-config:
  # Match with what's defined in kafka_cluster.yml under docker-compose directory
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  # Match with what's defined in kafka_cluster.yml under docker-compose directory
  schema-registry-url: http://localhost:8081
  topic-name: twitter-topic
  topic-names-to-create:
    - twitter-topic
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  # snappy is a compression library from google that is faster but provides less compression.
  compression-type: snappy
  # requires ACKS from all replicas, in order to be resilient, other values include 1 or 0. 1 means to wait only for the current broker's ack.
  acks: all
  # 16KB, the actual default value.
  batch-size: 16384
  batch-size-boost-factor: 100
  # Add a delay on producer in case of light load.
  linger-ms: 5
  request-timeout-ms: 60000
  # retry max of 5 times in case of error
  retry-count: 5